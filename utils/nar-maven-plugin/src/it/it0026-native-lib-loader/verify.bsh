/*
 * #%L
 * Native ARchive plugin for Maven
 * %%
 * Copyright (C) 2002 - 2014 NAR Maven Plugin developers.
 * %%
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * #L%
 */

/*
 * This script verifies that the native-lib-loader method to unpack and
 * load native libraries works even with fully packaged .jar files.
 */

import java.io.BufferedReader;
import java.io.File;
import java.io.InputStreamReader;

nativeLibLoaderVersion = "2.0.2";
classPath = localRepositoryPath + "/org/scijava/native-lib-loader/"
	+ nativeLibLoaderVersion + "/native-lib-loader-"
	+ nativeLibLoaderVersion + ".jar";
new File(basedir + "/target/").list(new FilenameFilter() {
	public boolean accept(File dir, String name) {
		if (name.startsWith("it0026-native-lib-loader-1.0-SNAPSHOT")) {
			classPath += File.pathSeparator
				+ new File(dir, name).getPath();
		}
		return false;
	}
});

printInputStream(in) {
	buffered = new BufferedReader(new InputStreamReader(in));
	new Thread() {
		public void run() {
			for (;;) {
				line = buffered.readLine();
				if (line == null) break;
				print(line);
			}
			buffered.close();
		}
	}.start();
}

print("Starting java -classpath '" + classPath + "' it0026.test.Hello");
process = new ProcessBuilder(new String[] {
		"java", "-classpath", classPath, "it0026.test.Hello"
	}).start();
printInputStream(process.getErrorStream());
printInputStream(process.getInputStream());
exitCode = process.waitFor();

if (exitCode != 108) {
	print("Unexpected exit code: " + exitCode);
	return false;
}
